// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞
const MARKETPLACE_CONFIG = {
    name: "Silk Road",
    adminUsername: "@ADMIN_ID1214",
    storageKey: "silk_road_marketplace",
    currency: "$"
};

// –î–∞–Ω–Ω—ã–µ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞
let marketplaceData = {
    products: [],
    users: [],
    blockedProducts: []
};

// DOM —ç–ª–µ–º–µ–Ω—Ç—ã
const elements = {
    accountList: document.getElementById("account-list"),
    addProductBtn: document.getElementById("add-product-btn"),
    addProductModal: document.getElementById("add-product-modal"),
    privacyModal: document.getElementById("privacy-modal"),
    adminPanel: document.getElementById("admin-panel"),
    adminLink: document.getElementById("admin-link"),
    closeButtons: document.querySelectorAll(".close-modal"),
    acceptPrivacyBtn: document.getElementById("accept-privacy"),
    privacyLinks: document.querySelectorAll(".privacy-link"),
    productForm: document.getElementById("product-form"),
    searchInput: document.getElementById("search-input"),
    sortSelect: document.getElementById("sort-select"),
    adminProductsList: document.getElementById("admin-products-list"),
    totalProducts: document.getElementById("total-products"),
    blockedProducts: document.getElementById("blocked-products")
};

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞
function initMarketplace() {
    loadData();
    setupEventListeners();
    checkAdminStatus();
    renderProducts();
    
    if (!localStorage.getItem("privacyAccepted")) {
        elements.privacyModal.style.display = "flex";
    }
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ localStorage
function loadData() {
    const savedData = localStorage.getItem(MARKETPLACE_CONFIG.storageKey);
    if (savedData) {
        marketplaceData = JSON.parse(savedData);
    }
}

// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ localStorage
function saveData() {
    localStorage.setItem(
        MARKETPLACE_CONFIG.storageKey,
        JSON.stringify(marketplaceData)
    );
}

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
function setupEventListeners() {
    // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω
    elements.closeButtons.forEach(btn => {
        btn.addEventListener("click", closeAllModals);
    });

    // –ü–æ–ª–∏—Ç–∏–∫–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏
    elements.acceptPrivacyBtn.addEventListener("click", acceptPrivacy);
    elements.privacyLinks.forEach(link => {
        link.addEventListener("click", showPrivacyModal);
    });

    // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞
    elements.addProductBtn.addEventListener("click", handleAddProductClick);
    elements.productForm.addEventListener("submit", handleProductSubmit);

    // –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å
    if (elements.adminLink) {
        elements.adminLink.addEventListener("click", showAdminPanel);
    }

    // –ü–æ–∏—Å–∫ –∏ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞
    if (elements.searchInput) {
        elements.searchInput.addEventListener("input", renderProducts);
    }
    if (elements.sortSelect) {
        elements.sortSelect.addEventListener("change", renderProducts);
    }
}

// –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
function registerUser() {
    const tgUsername = prompt("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à Telegram (@username):");
    if (!tgUsername) {
        alert("–£–∫–∞–∂–∏—Ç–µ —é–∑–µ—Ä–Ω–µ–π–º!");
        return false;
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞ —é–∑–µ—Ä–Ω–µ–π–º–∞
    if (!tgUsername.startsWith("@")) {
        alert("–Æ–∑–µ—Ä–Ω–µ–π–º –¥–æ–ª–∂–µ–Ω –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å @");
        return false;
    }

    currentUser = tgUsername;
    alert(`üîê –í–∞—à —é–∑–µ—Ä–Ω–µ–π–º: ${tgUsername}\n–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –æ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π!`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∞–¥–º–∏–Ω –ª–∏ —ç—Ç–æ
    checkAdminStatus();
    
    return true;
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –∞–¥–º–∏–Ω–∞
function checkAdminStatus() {
    if (currentUser && currentUser.toLowerCase() === MARKETPLACE_CONFIG.adminUsername.toLowerCase()) {
        elements.adminLink.style.display = "block";
    } else {
        elements.adminLink.style.display = "none";
    }
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –Ω–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞
function handleAddProductClick() {
    if (!currentUser && !registerUser()) return;
    elements.addProductModal.style.display = "flex";
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã —Ç–æ–≤–∞—Ä–∞
function handleProductSubmit(e) {
    e.preventDefault();
    const [name, desc, price, seller] = e.target.elements;
    
    // –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö
    if (name.value.length < 3) {
        alert("–ù–∞–∑–≤–∞–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –Ω–µ –∫–æ—Ä–æ—á–µ 3 —Å–∏–º–≤–æ–ª–æ–≤");
        return;
    }
    
    if (desc.value.length < 10) {
        alert("–û–ø–∏—Å–∞–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –Ω–µ –∫–æ—Ä–æ—á–µ 10 —Å–∏–º–≤–æ–ª–æ–≤");
        return;
    }
    
    if (parseFloat(price.value) <= 0) {
        alert("–¶–µ–Ω–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –±–æ–ª—å—à–µ 0");
        return;
    }
    
    if (!seller.value.startsWith("@")) {
        alert("–Æ–∑–µ—Ä–Ω–µ–π–º –¥–æ–ª–∂–µ–Ω –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å @");
        return;
    }

    // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞
    const newProduct = {
        id: Date.now(),
        name: name.value,
        desc: desc.value,
        price: parseFloat(price.value).toFixed(2),
        seller: seller.value,
        date: new Date().toISOString(),
        isBlocked: false,
        rating: 0,
        reviews: []
    };

    marketplaceData.products.push(newProduct);
    saveData();
    renderProducts();
    elements.addProductModal.style.display = "none";
    e.target.reset();
    
    alert("–¢–æ–≤–∞—Ä —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!");
}

// –†–µ–Ω–¥–µ—Ä —Å–ø–∏—Å–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤
function renderProducts() {
    let productsToDisplay = [...marketplaceData.products];
    
    // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö
    productsToDisplay = productsToDisplay.filter(p => !p.isBlocked);
    
    // –ü–æ–∏—Å–∫
    if (elements.searchInput && elements.searchInput.value) {
        const searchTerm = elements.searchInput.value.toLowerCase();
        productsToDisplay = productsToDisplay.filter(p => 
            p.name.toLowerCase().includes(searchTerm) || 
            p.desc.toLowerCase().includes(searchTerm)
        );
    }
    
    // –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞
    if (elements.sortSelect) {
        switch (elements.sortSelect.value) {
            case "price-asc":
                productsToDisplay.sort((a, b) => a.price - b.price);
                break;
            case "price-desc":
                productsToDisplay.sort((a, b) => b.price - a.price);
                break;
            case "newest":
                productsToDisplay.sort((a, b) => new Date(b.date) - new Date(a.date));
                break;
        }
    }
    
    // –û—Ç—Ä–∏—Å–æ–≤–∫–∞
    elements.accountList.innerHTML = productsToDisplay
        .map(product => `
            <div class="account-card" data-id="${product.id}">
                <h3>${product.name}</h3>
                <p>${product.desc}</p>
                <p class="price">üí∞ ${product.price}${MARKETPLACE_CONFIG.currency}</p>
                <div class="product-meta">
                    <p class="seller">üë§ –ü—Ä–æ–¥–∞–≤–µ—Ü: <a href="https://t.me/${product.seller.replace("@", "")}" target="_blank">${product.seller}</a></p>
                    <small>${new Date(product.date).toLocaleDateString()}</small>
                </div>
                <div class="product-actions">
                    <button class="btn" onclick="handleBuyClick('${product.seller}')">–ö—É–ø–∏—Ç—å</button>
                    ${currentUser === product.seller ? `<button class="btn danger" onclick="handleDeleteProduct(${product.id})">–£–¥–∞–ª–∏—Ç—å</button>` : ''}
                </div>
            </div>
        `).join("");
}

// –ü–æ–∫–∞–∑–∞—Ç—å –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å
function showAdminPanel(e) {
    if (e) e.preventDefault();
    
    if (currentUser !== MARKETPLACE_CONFIG.adminUsername) {
        alert("–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω!");
        return;
    }
    
    elements.adminPanel.style.display = "flex";
    renderAdminPanel();
}

// –†–µ–Ω–¥–µ—Ä –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
function renderAdminPanel() {
    elements.totalProducts.textContent = marketplaceData.products.length;
    elements.blockedProducts.textContent = marketplaceData.products.filter(p => p.isBlocked).length;
    
    elements.adminProductsList.innerHTML = marketplaceData.products
        .map(product => `
            <div class="admin-product-card" data-id="${product.id}">
                <h4>${product.name} (${product.price}${MARKETPLACE_CONFIG.currency})</h4>
                <p>${product.desc}</p>
                <div class="admin-product-meta">
                    <span>–ü—Ä–æ–¥–∞–≤–µ—Ü: ${product.seller}</span>
                    <span>–î–∞—Ç–∞: ${new Date(product.date).toLocaleDateString()}</span>
                </div>
                <div class="admin-product-actions">
                    <button onclick="toggleBlockProduct(${product.id})">
                        ${product.isBlocked ? "–†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å" : "–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å"}
                    </button>
                    <button class="danger" onclick="deleteProduct(${product.id})">–£–¥–∞–ª–∏—Ç—å</button>
                </div>
            </div>
        `).join("");
}

// –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞–º–∏ (–≥–ª–æ–±–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ HTML)
window.handleBuyClick = (seller) => {
    alert(`–°–≤—è–∂–∏—Ç–µ—Å—å —Å ${seller} –≤ Telegram –¥–ª—è –ø–æ–∫—É–ø–∫–∏.`);
};

window.toggleBlockProduct = (id) => {
    marketplaceData.products = marketplaceData.products.map(p => 
        p.id === id ? {...p, isBlocked: !p.isBlocked} : p
    );
    saveData();
    renderProducts();
    renderAdminPanel();
};

window.deleteProduct = (id) => {
    if (confirm("–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç–æ—Ç —Ç–æ–≤–∞—Ä?")) {
        marketplaceData.products = marketplaceData.products.filter(p => p.id !== id);
        saveData();
        renderProducts();
        renderAdminPanel();
    }
};

window.handleDeleteProduct = (id) => {
    if (confirm("–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —Å–≤–æ–π —Ç–æ–≤–∞—Ä?")) {
        marketplaceData.products = marketplaceData.products.filter(p => p.id !== id);
        saveData();
        renderProducts();
    }
};

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
function closeAllModals() {
    elements.addProductModal.style.display = "none";
    elements.privacyModal.style.display = "none";
    elements.adminPanel.style.display = "none";
}

function acceptPrivacy() {
    localStorage.setItem("privacyAccepted", "true");
    elements.privacyModal.style.display = "none";
}

function showPrivacyModal() {
    elements.privacyModal.style.display = "flex";
}

// –ó–∞–ø—É—Å–∫ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞
let currentUser = localStorage.getItem("marketplace_user") || null;
initMarketplace();